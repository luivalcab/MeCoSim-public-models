@model<membrane_division>

def main()
{
	call Sat(m,n);
	call define_input();
}

def init_membrane_structure()
{
	@mu = [[]'2]'1;
}

def Sat(m,n)
{
	call init_membrane_structure();
	call init_multisets();
	call init_rules(m,n);
}

def init_multisets()
{
	@ms(2) = d{1};
}

def init_rules(m,n)
{
	[d{k}]'2 --> +[d{k}]-[d{k}] : 1 <= k <= n;

	{
	+[x{i,1} --> r{i,1}]'2;
	-[nx{i,1} --> r{i,1}]'2;
	-[x{i,1} --> #]'2;
	+[nx{i,1} --> #]'2;
	} : 1 <= i <= m;

	{
	+[x{i,j} --> x{i,j-1}]'2;
	-[x{i,j} --> x{i,j-1}]'2;
	+[nx{i,j} --> nx{i,j-1}]'2;
	-[nx{i,j} --> nx{i,j-1}]'2;
	} : 1<=i<=m, 2<=j<=n;

	{
	+[d{k}]'2 --> []d{k};
	-[d{k}]'2 --> []d{k};
	} : 1<=k<=n;

	d{k}[]'2 --> [d{k+1}] : 1<=k<=n-1;
	[r{i,k} --> r{i,k+1}]'2 : 1<=i<=m, 1<=k<=2*n-1;
	[d{k} --> d{k+1}]'1 : n <= k<= 3*n-3;
	[d{3*n-2} --> d{3*n-1},e]'1;
	e[]'2 --> +[c{1}];
	[d{3*n-1} --> d{3*n}]'1;
	[d{k} --> d{k+1}]'1 : 3*n <= k <= 3*n+2*m+2;
	+[r{1,2*n}]'2 --> -[]r{1,2*n};
	-[r{i,2*n} --> r{i-1,2*n}]'2 : 1<= i <= m;
	r{1,2*n}-[]'2 --> +[r{0,2*n}];
	-[c{k} --> c{k+1}]'2 : 1<=k<=m;
	+[c{m+1}]'2 --> +[]c{m+1};
	[c{m+1} --> c{m+2},t]'1;
	[t]'1 --> +[]t;
	+[c{m+2}]'1 --> -[]Yes;
	[d{3*n+2*m+3}]'1 --> +[]No;
}

def define_input()
{
	@ms(2) += nx{clause{i},variable{i}}*valn{i},x{clause{i},variable{i}}*val{i} : 1<=i<=nvals;
}